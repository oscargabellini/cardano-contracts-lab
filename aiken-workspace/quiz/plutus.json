{
  "preamble": {
    "title": "aiken-lang/quiz",
    "description": "Aiken contracts for project 'aiken-lang/quiz'",
    "version": "0.0.0",
    "plutusVersion": "v3",
    "compiler": {
      "name": "Aiken",
      "version": "v1.1.7+e2fb28b"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "quiz.quiz.spend",
      "datum": {
        "title": "datum_opt",
        "schema": {
          "$ref": "#/definitions/quiz~1Datum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/quiz~1Redeemer"
        }
      },
      "compiledCode": "58ae01010032323232323225333002323232323253330073370e900118041baa0011323322533300a3370e900018059baa00513232533300f30110021533300c3370e900018069baa0031323371e6e50dd7180098079baa008375c6002601e6ea8c044c03cdd5002118088008b0b1bae300f001300c375400a2c60180026018601a00260126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d11",
      "hash": "86d86e1f3561aef92ce1f341acdf09190b8ca9c4b9a9474c5e5604ba"
    },
    {
      "title": "quiz.quiz.else",
      "redeemer": {
        "schema": {}
      },
      "compiledCode": "58ae01010032323232323225333002323232323253330073370e900118041baa0011323322533300a3370e900018059baa00513232533300f30110021533300c3370e900018069baa0031323371e6e50dd7180098079baa008375c6002601e6ea8c044c03cdd5002118088008b0b1bae300f001300c375400a2c60180026018601a00260126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d11",
      "hash": "86d86e1f3561aef92ce1f341acdf09190b8ca9c4b9a9474c5e5604ba"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "Option$StakeCredential": {
      "title": "Option",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/StakeCredential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "PaymentCredential": {
      "title": "PaymentCredential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKey",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/VerificationKeyHash"
            }
          ]
        },
        {
          "title": "Script",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ScriptHash"
            }
          ]
        }
      ]
    },
    "ScriptHash": {
      "title": "ScriptHash",
      "dataType": "bytes"
    },
    "StakeCredential": {
      "title": "StakeCredential",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/cardano~1address~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "VerificationKeyHash": {
      "title": "VerificationKeyHash",
      "dataType": "bytes"
    },
    "cardano/address/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/PaymentCredential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$StakeCredential"
            }
          ]
        }
      ]
    },
    "cardano/address/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKey",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/VerificationKeyHash"
            }
          ]
        },
        {
          "title": "Script",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ScriptHash"
            }
          ]
        }
      ]
    },
    "quiz/Datum": {
      "title": "Datum",
      "anyOf": [
        {
          "title": "Datum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "answer_hash",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "fee_address",
              "$ref": "#/definitions/cardano~1address~1Address"
            },
            {
              "title": "question",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "quiz/Redeemer": {
      "title": "Redeemer",
      "anyOf": [
        {
          "title": "Redeemer",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "answer",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    }
  }
}